from sympy import *
from numpy import log as ln
import seaborn as sns

"""
    - Rinovirus = 10/h quanta
    - Sarampo = 570/h quanta
    - COVID = 141/h quanta
"""

# Constantes:

C = 465 # ppm (Ambiente Interno)
Co = 419 #ppm (Ambiente Externo)
Ca =  640 # ppm (Fração volumétrica de CO 2 adicionada ao ar expirado durante a respiração)
I = 1 # Infectados
n = 8 # N° de pessoas no espaço
p = 8 # l/min
q = 140 # quanta/h
t_horas = 2 # horas

init_printing(use_unicode=True)
t = symbols('t')

# EQUATIONS:
# fração reinalada:
def fracao_reinalada(C, Co, Ca):
    global f
    f = (C - Co) / Ca
    return f

# Fração reinalada média:
def fracao_reinalada_media(C, Co, Ca):
    global df
    df = integrate(((C-Co)/Ca), (t, 0, 2))
    return df

# Concentração Quântica no Espaço:
def concentracao_q_media(df, I, q, n, p):
    global dN
    dN = (df*I*q) / (n*p)
    return dN
    
# O n° médio de quanta repirado por uma pessoa:
def u(p, t_horas, dN):
    global du
    du = p*t_horas*dN
    return du

# Probabilidade de Infecção:
def Probability(du):
    global P
    P = 1 - exp(-du)
    return P*100

# Número reprodutivo básico em um espaço aéreo interno compartilhado ( Ra0 )
def Ra0(du, n):
    # I = 1 e S(n° de suscetíveis) = n - 1
    global Ra0 
    Ra0 = (n-1)*(1 - exp(-du))
    return Ra0

# Fração de Reinalação Crítica (Fc): Recíproco do n° de quanta que um infectante libera em um edifício
def fracao_critica(q, t_horas, n):
    global fc
    if n <= 30:
        fc = (1/q*t_horas)*(ln((n - 1) / (n - 2)))**n
        return fc*100
    else:
        fc = 1/q*t_horas
        return fc*100
    
if __name__ == "__main__":
    
    f = fracao_reinalada(C, Co, Ca)
    print(f"Fração reinalada: {f} ppm") 
    df = fracao_reinalada_media(C, Co, Ca)
    print(f"Fração reinalada média: {df} ppm")
    dN = concentracao_q_media(df, I, q, n, p)
    print(f"Concentração Quântica no Espaço: {dN} quanta/m^3")
    du = u(p, t_horas, dN)
    print("O n° médio de quanta repirado por uma pessoa:", du)
    p = Probability(du)
    print(f"Probabilidade de Infecção: {p} %")
    R = Ra0(du, n)
    print(f"Número reprodutivo básico em um espaço aéreo interno compartilhado: {R} %")
    fc = fracao_critica(q, t_horas, n)
    print(f"Fração Reinalada Crítica: {fc} %")
